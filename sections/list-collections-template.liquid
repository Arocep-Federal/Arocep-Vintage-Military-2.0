
    {%- style -%}


.catalog-nav .site-nav__item {position:static }
.catalog-nav .site-nav a {
      color:black !important;
    }
    .site-nav__dropdown { 
      width:100%;
      text-align:center;
      padding:10px 0;
    } 
    .site-nav__dropdown > li { 
      position:static;
      width:auto;
      float:left;
      font-weight:bold;
      padding:10px 0; 
    } 
    .site-nav__deep-dropdown {
      top:53px;
      left:2vw;
      position:absolute;
      display:flex;
      flex-direction:column;
      flex-wrap:wrap;
      background-color:white;
      /* width:calc(100vw - 20px);  */
      width:80vw; 
      padding:10px; 
      align-items:center;
    }
     
    .office-supplies {
      max-height:400px;
    }
    .industrial,
    .it-products {
      max-height:300px;
    }
    
    .janitorial-sanitation,
    .food-service {
      max-height:300px; 
    }
    
    
    .site-nav__deep-dropdown > li {
      font-weight:normal;
      flex: 0 1 auto;
      width:25%;  
      text-overflow: ellipsis;
      height:auto;
      text-wrap:wrap;
    }


    .site-nav__deep-dropdown.industrial > li, 
    .site-nav__deep-dropdown.it-products > li,
    .site-nav__deep-dropdown.janitorial-sanitation > li,
    .site-nav__deep-dropdown.food-service > li {
      width:33.33333% 
    }

    .site-nav__dropdown-link {
      white-space: wrap;
    }

    .site-nav__details .caret{
      transform:rotate(90deg)
    } 


    .site-nav .site-nav--active > a {
      color:#90aac7
    } 

    
    
    {%- endstyle -%}




{%- liquid
  assign main_menu = linklists[section.settings.main_menu_link_list]

  assign logo_alignment = 'left'
  if section.settings.main_menu_alignment == 'center-left' or section.settings.main_menu_alignment == 'center-split' or section.settings.main_menu_alignment == 'center' or section.settings.main_menu_alignment == 'center-drawer'
    assign logo_alignment = 'center'
  endif

  assign template_name = template | replace: '.', ' ' | truncatewords: 2, '' | handle

  assign sticky_header = false
  assign overlay_header = false

  if section.settings.header_sticky
    assign sticky_header = true
  endif

  if template_name == 'index' and section.settings.sticky_index
    assign overlay_header = true
  endif
  if template_name contains 'collection' and collection.image and section.settings.sticky_collection
    assign overlay_header = true
  endif
-%}



{%- liquid
  unless limit
    assign limit = main_menu.links.size
  endunless
  unless offset
    assign offset = 0
  endunless
-%}


<div class="catalog-nav">
<ul
  class="site-nav site-navigation medium-down--hide"
  {% comment %} class="site-nav" {% endcomment %}
>
  {%- for link in main_menu.links limit: limit offset: offset -%}
    {%- liquid
      assign has_dropdown = false
      assign is_megamenu = false
      if link.links != blank
        assign has_dropdown = true
      endif

      if has_dropdown
        for block in section.blocks
          if link.title == block.settings.menu_item
            assign is_megamenu = true

            assign promo_image_1 = block.settings.promo_image_1
            assign promo_heading_1 = block.settings.promo_heading_1
            assign promo_text_1 = block.settings.promo_text_1
            assign promo_url_1 = block.settings.promo_url_1
            assign promo_image_2 = block.settings.promo_image_2
            assign promo_heading_2 = block.settings.promo_heading_2
            assign promo_text_2 = block.settings.promo_text_2
            assign promo_url_2 = block.settings.promo_url_2
            break
          endif
        endfor
      endif
    -%}

    <li class="site-nav__item site-nav__expanded-item{% if has_dropdown %} site-nav--has-dropdown{% endif %}{% if is_megamenu %} site-nav--is-megamenu{% endif %}{% unless template == 'index' %}{% if link.active %} site-nav--active{% endif %}{% endunless %}">

      {% if is_megamenu or has_dropdown %}
        <details
          id="site-nav-item--{{ forloop.index }}"
          class="site-nav__details"
          data-hover="{{ hover_menu }}"
        >
          <summary
            data-link="{{ link.url }}"
            aria-expanded="false"
            aria-controls="site-nav-item--{{ forloop.index }}"
            class="site-nav__link {% if has_dropdown %} site-nav__link--has-dropdown{% endif %}"
          >
          {{ link.title }} <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon--wide icon-chevron-down" viewBox="0 0 28 16"><path d="m1.57 1.59 12.76 12.77L27.1 1.59" stroke-width="2" stroke="#000" fill="none"/></svg>
          </summary>
      {% else %}
        <a
          href="{{ link.url }}"
          class="site-nav__link{% if has_dropdown %} site-nav__link--has-dropdown{% endif %}"
        >
          {{ link.title }} 
          {%- if has_dropdown -%}
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon--wide icon-chevron-down" viewBox="0 0 28 16"><path d="m1.57 1.59 12.76 12.77L27.1 1.59" stroke-width="2" stroke="#000" fill="none"/></svg>
          {%- endif -%}
        </a>
      {% endif %}


      {%- if is_megamenu -%}
        {%- assign columns = 1 -%}
        <div class="site-nav__dropdown megamenu text-left">
          <div class="page-width">
            <div class="megamenu__wrapper">
              <div class="megamenu__cols">
                <div class="megamenu__col appear-animation appear-delay-1">
                  {%- for childlink in link.links -%}
                    {%- liquid
                      assign create_new_column = false

                      if childlink.levels > 0 and forloop.index != 1
                        assign create_new_column = true
                      endif

                      if childlink.levels == 0 and previous_column_type == 'full'
                        assign create_new_column = true
                      endif
                    -%}

                    {%- if create_new_column -%}
                      {%- assign columns = columns | plus: 1 -%}
                      </div><div class="megamenu__col appear-animation appear-delay-{{ forloop.index }}">
                    {%- endif -%}

                    <div class="megamenu__col-title">
                      <a href="{{ childlink.url }}" class="site-nav__dropdown-link site-nav__dropdown-link--top-level site-nav__dropdown-link--mega">
                        <span class="megamenu__link-label">
                          {{ childlink.title }} 
                        </span>
                      </a>
                    </div>

                    {%- liquid
                      if childlink.levels > 0
                        assign previous_column_type = 'full'
                      else
                        assign previous_column_type = 'single'
                      endif
                    -%}

                    {%- for grandchildlink in childlink.links -%}
                      <a href="{{ grandchildlink.url }}" class="site-nav__dropdown-link">
                        {{ grandchildlink.title }}
                      </a>
                    {%- endfor -%}
                  {%- endfor -%}
                </div>
              </div>
              {%- if promo_image_1 -%}
                {%- assign columns = columns | plus: 1 -%}
                <div class="megamenu__promo appear-animation appear-delay-{{ columns }}">
                  {%- if promo_url_1 -%}
                    <a href="{{ promo_url_1 }}" class="megamenu__promo-link">
                  {%- endif -%}
                    <div style="margin: 0 auto; max-width: {{ promo_image_1.width }}px">
                      <div class="image-wrap aos-animate megamenu__promo-image" style="height: 0; padding-bottom: {{ 100 | divided_by: promo_image_1.aspect_ratio }}%;">
                        {%- render 'image-element',
                          img: promo_image_1,
                          widths: '540, 750, 900',
                          sizeVariable: '250px',
                        -%}
                      </div>
                    </div>
                    {%- if promo_heading_1 -%}
                      <div><strong>{{ promo_heading_1 }}</strong></div>
                    {%- endif -%}
                    {%- if promo_text_1 -%}
                      <div>{{ promo_text_1 }}</div>
                    {%- endif -%}
                  {%- if promo_url_1 -%}
                    </a>
                  {%- endif -%}
                </div>
              {%- endif -%}
              {%- if promo_image_2 -%}
                {%- assign columns = columns | plus: 1 -%}
                <div class="megamenu__promo appear-animation appear-delay-{{ columns }}">
                  {%- if promo_url_2 -%}
                    <a href="{{ promo_url_2 }}" class="megamenu__promo-link">
                  {%- endif -%}
                    <div style="margin: 0 auto; max-width: {{ promo_image_2.width }}px">
                      <div class="image-wrap aos-animate megamenu__promo-image" style="height: 0; padding-bottom: {{ 100 | divided_by: promo_image_2.aspect_ratio }}%;">
                        {%- render 'image-element',
                          img: promo_image_2,
                          widths: '540, 750, 900',
                          sizeVariable: '250px',
                        -%}
                      </div>
                    </div>
                    {%- if promo_heading_2 -%}
                      <div><strong>{{ promo_heading_2 }}</strong></div>
                    {%- endif -%}
                    {%- if promo_text_2 -%}
                      <div>{{ promo_text_2 }}</div>
                    {%- endif -%}
                  {%- if promo_url_2 -%}
                    </a>
                  {%- endif -%}
                </div>
              {%- endif -%}
            </div>
          </div>
        </div>
      {%- elsif has_dropdown -%}
        <ul class="site-nav__dropdown text-left">
          {%- for childlink in link.links -%}
            {%- liquid
              assign has_sub_dropdown = false
              if childlink.links != blank
              assign has_sub_dropdown = true
              endif
            -%}

            <li class="{% if childlink.active %}site-nav--active{% endif %}{% if has_sub_dropdown %} site-nav__deep-dropdown-trigger{% endif %} ">
              {% if has_sub_dropdown %}
                <details
                  id="site-nav-deep-item--{{ forloop.index }}"
                  class="site-nav__details "
                  data-hover="{{ hover_menu }}"
                >

                  <summary
                    data-link="{{ childlink.url }}"
                    aria-expanded="false"
                    aria-controls="site-nav-deep-item--{{ forloop.index }}"
                    class="site-nav__dropdown-link site-nav__dropdown-link--second-level{% if has_sub_dropdown %} site-nav__dropdown-link--has-children{% endif %}"
                  >
                    {{ childlink.title | escape }}  <span class="caret">&gt;</span>
                    {%- if has_sub_dropdown -%}
                    {%- endif -%}
                  </summary>
              {% else %}
                <a href="{{ childlink.url }}" class="site-nav__dropdown-link site-nav__dropdown-link--second-level">
                  {{ childlink.title | escape }}  
                </a>
              {% endif %}
  
              {%- if has_sub_dropdown -%}
                <ul class="site-nav__deep-dropdown  {{ childlink.handle | escape }}">
                  {%- for grandchildlink in childlink.links -%}
                    <li>
                      <a href="{{ grandchildlink.url }}" class="site-nav__dropdown-link">{{ grandchildlink.title | escape }} </a>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}

              {% if has_sub_dropdown %}
              </details>
            {% endif %}
            </li>
          {%- endfor -%}
        </ul>
      {%- endif -%}

      {% if is_megamenu or has_dropdown %}
        </details>
      {% endif %}
    </li>
  {%- endfor -%}
</ul>
</div>

{% schema %}
{
  "name": "t:sections.header.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.header.settings.header_logo"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.label"
    },
    {
      "type": "image_picker",
      "id": "logo-inverted",
      "label": "t:sections.header.settings.logo-inverted.label",
      "info": "t:sections.header.settings.logo-inverted.info"
    },
    {
      "type": "range",
      "id": "desktop_logo_width",
      "label": "t:sections.header.settings.desktop_logo_width.label",
      "default": 200,
      "min": 100,
      "max": 400,
      "step": 10,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_logo_width",
      "label": "t:sections.header.settings.mobile_logo_width.label",
      "default": 140,
      "min": 60,
      "max": 200,
      "step": 10,
      "unit": "px",
      "info": "t:sections.header.settings.mobile_logo_width.info"
    },
    {
      "type": "link_list",
      "id": "main_menu_link_list",
      "label": "t:sections.header.settings.main_menu_link_list.label",
      "default": "main-menu"
    },
    {
      "type": "checkbox",
      "id": "hover_menu",
      "label": "t:sections.header.settings.hover_menu.label",
      "default": true
    },
    {
      "type": "select",
      "id": "main_menu_alignment",
      "label": "t:sections.header.settings.main_menu_alignment.label",
      "default": "left-center",
      "options": [
        {
          "value": "left",
          "label": "t:sections.header.settings.main_menu_alignment.options.left.label"
        },
        {
          "value": "left-center",
          "label": "t:sections.header.settings.main_menu_alignment.options.left-center.label"
        },
        {
          "value": "left-drawer",
          "label": "t:sections.header.settings.main_menu_alignment.options.left-drawer.label"
        },
        {
          "value": "center-left",
          "label": "t:sections.header.settings.main_menu_alignment.options.center-left.label"
        },
        {
          "value": "center-split",
          "label": "t:sections.header.settings.main_menu_alignment.options.center-split.label"
        },
        {
          "value": "center",
          "label": "t:sections.header.settings.main_menu_alignment.options.center.label"
        },
        {
          "value": "center-drawer",
          "label": "t:sections.header.settings.main_menu_alignment.options.center-drawer.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "header_sticky",
      "label": "t:sections.header.settings.header_sticky.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "sticky_index",
      "label": "t:sections.header.settings.sticky_index.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "sticky_collection",
      "label": "t:sections.header.settings.sticky_collection.label",
      "info": "t:sections.header.settings.sticky_collection.info",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "megamenu",
      "name": "t:sections.header.blocks.mega_menu.name",
      "settings": [
        {
          "type": "text",
          "id": "menu_item",
          "label": "t:sections.header.blocks.mega_menu.settings.menu_item.label",
          "info": "t:sections.header.blocks.mega_menu.settings.menu_item.info"
        },
        {
          "type": "header",
          "content": "t:sections.header.blocks.mega_menu.settings.header_promotion_1"
        },
        {
          "type": "image_picker",
          "id": "promo_image_1",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_image_1.label"
        },
        {
          "type": "text",
          "id": "promo_heading_1",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_heading_1.label"
        },
        {
          "type": "text",
          "id": "promo_text_1",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_text_1.label"
        },
        {
          "type": "url",
          "id": "promo_url_1",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_url_1.label"
        },
        {
          "type": "header",
          "content": "t:sections.header.blocks.mega_menu.settings.header_promotion_2"
        },
        {
          "type": "image_picker",
          "id": "promo_image_2",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_image_2.label"
        },
        {
          "type": "text",
          "id": "promo_heading_2",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_heading_2.label"
        },
        {
          "type": "text",
          "id": "promo_text_2",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_text_2.label"
        },
        {
          "type": "url",
          "id": "promo_url_2",
          "label": "t:sections.header.blocks.mega_menu.settings.promo_url_2.label"
        }
      ]
    }
  ],
  "default": {
    "settings": {}
  }
}
{% endschema %}


{% comment %} 

{% style %}
  .collections-list--{{ section.id }} .medium-up--one-third  {
    width:calc(33.333333% - 6px);
    margin: 0 6px 6px 0;
    border: 1px solid #ccc;
    border-radius:10px;
    overflow:hidden;
  }
  .collections-list--{{ section.id }} .skrim__title  {
    line-height:1.1;
    margin-top:-10px;
  }
  .collections-list--{{ section.id }} .skrim__item-content .skrim__overlay:after  {
    background-image: linear-gradient(to bottom, rgba(0,0,0, .1) 30%, rgba(0,0,0,1) 100%);
  }


  @media only screen and (max-width: 1024px){
    .collections-list--{{ section.id }} .medium-up--one-third  {
      width: calc(50% - 6px);
    }
    .collections-list--{{ section.id }} .grid--uniform .medium-up--one-third:nth-of-type(3n+1) {
      clear:none !important;
    }
  }

  @media only screen and (max-width: 590px){
    .collections-list--{{ section.id }} .skrim__title  {
      font-size:1rem;
      line-height:1.1;
  }
  }


    .collections-list--{{ section.id }} .grid__item {
      padding-left: 0;
    }
    .collections-list--{{ section.id }} .grid {
      margin-left:0;
    }
{% endstyle %}
{%- liquid
  assign per_row = section.settings.grid
  assign paginate_by = per_row | times: 7

  capture gridView
    assign per_row = per_row | times: 1
    if section.settings.display_type == 'selected' and section.blocks.size < per_row
      assign products_per_row = section.blocks.size
    else
      assign products_per_row = per_row
    endif
    render 'products_per_row', products_per_row: products_per_row, style: 'fractions'
  endcapture

  # NOTE: Section uses a unique helper class for grid
  assign grid_item_width = gridView | append: ' collection--square-small'
-%}

{% comment %} {%- paginate collections by paginate_by -%} {% endcomment %}
  <div class="page-width page-content collections-list collections-list--{{ section.id }}">
    {%- render 'breadcrumbs' -%}

    {%- if section.settings.title_enable -%}
      <header class="section-header">
        <h1 class="section-header__title">
          {{ 'collections.general.catalog_title' | t }}
        </h1>
      </header>
    {%- endif -%}

    <div class="grid grid--uniform skrim-grid">
      {% if section.settings.display_type == 'all' %}
        {%- liquid
          case section.settings.sort
            when 'products_high', 'products_low'
              assign collections = collections | sort: 'all_products_count'
            when 'date', 'date_reversed'
              assign collections = collections | sort: 'published_at'
          endcase
        -%}
        {% if section.settings.sort == 'products_low'
          or section.settings.sort == 'date'
          or section.settings.sort == 'alphabetical'
        %}
          {%- for collection in collections -%}
            {%- render 'collection-grid-item',
              collection: collection,
              gridView: grid_item_width,
              sizeVariable: gridView,
              fallback: 'variable'
            -%}
          {%- endfor -%}
        {% else %}
          {%- for collection in collections reversed -%}
            {%- render 'collection-grid-item',
              collection: collection,
              gridView: grid_item_width,
              sizeVariable: gridView,
              fallback: 'variable'
            -%}
          {%- endfor -%}
        {% endif %}
      {% else %}
        {%- for block in section.blocks -%}
          {%- assign collection = collections[block.settings.collection] -%}
          {%- render 'collection-grid-item',
            block: block,
            collection: collection,
            gridView: grid_item_width,
            sizeVariable: gridView,
            fallback: 'variable'
          -%}
        {%- endfor -%}
      {% endif %}
    </div> 
    
    
    {%- if paginate.pages > 1 and section.settings.display_type == 'all' -%}
    {%- render 'pagination', paginate: paginate -%}
    {%- endif -%} 


  </div>
  {%- endpaginate -%}

  
  {% schema %}
  {
    "name": "t:sections.list-collections-template.name",
    "settings": [
      {
        "type": "checkbox",
        "id": "title_enable",
        "label": "t:sections.list-collections-template.settings.title_enable.label",
        "default": true
      },
      {
        "type": "paragraph",
        "content": "t:sections.list-collections-template.settings.content"
      },
      {
        "type": "radio",
        "id": "display_type",
        "label": "t:sections.list-collections-template.settings.display_type.label",
        "default": "all",
        "options": [
          {
            "value": "all",
            "label": "t:sections.list-collections-template.settings.display_type.options.all.label"
          },
          {
            "value": "selected",
            "label": "t:sections.list-collections-template.settings.display_type.options.selected.label"
          }
        ]
      },
      {
        "type": "select",
        "id": "sort",
        "label": "t:sections.list-collections-template.settings.sort.label",
        "info": "t:sections.list-collections-template.settings.sort.info",
        "default": "alphabetical",
        "options": [
          {
            "value": "products_high",
            "label": "t:sections.list-collections-template.settings.sort.options.products_high.label"
          },
          {
            "value": "products_low",
            "label": "t:sections.list-collections-template.settings.sort.options.products_low.label"
          },
          {
            "value": "alphabetical",
            "label": "t:sections.list-collections-template.settings.sort.options.alphabetical.label"
          },
          {
            "value": "alphabetical_reversed",
            "label": "t:sections.list-collections-template.settings.sort.options.alphabetical_reversed.label"
          },
          {
            "value": "date",
            "label": "t:sections.list-collections-template.settings.sort.options.date.label"
          },
          {
            "value": "date_reversed",
            "label": "t:sections.list-collections-template.settings.sort.options.date_reversed.label"
          }
        ]
      },
      {
        "type": "select",
        "id": "grid",
        "label": "t:sections.list-collections-template.settings.grid.label",
        "default": "3",
        "options": [
          {
            "value": "1",
            "label": "1"
          },
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          }
        ]
      }
    ],
    "blocks": [
      {
        "type": "collection",
        "name": "t:sections.list-collections-template.blocks.collection.name",
        "settings": [
          {
            "label": "t:sections.list-collections-template.blocks.collection.settings.collection.label",
            "id": "collection",
            "type": "collection"
          }
        ]
      }
    ]
  }
  {% endschema %}
  
  {% endcomment %}